{"version":3,"file":"component---src-pages-blog-js-0dd81caf57fa9a65fbe3.js","mappings":"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","sources":["webpack://gatsby-starter-julia/./node_modules/@mui/material/SvgIcon/svgIconClasses.js","webpack://gatsby-starter-julia/./node_modules/@mui/material/SvgIcon/SvgIcon.js","webpack://gatsby-starter-julia/./node_modules/@mui/material/utils/createSvgIcon.js","webpack://gatsby-starter-julia/./node_modules/@mui/icons-material/esm/OpenInNew.js","webpack://gatsby-starter-julia/./src/pagesStyles/blog.styles.js","webpack://gatsby-starter-julia/./src/pages/blog.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSvgIconUtilityClass(slot) {\n  return generateUtilityClass('MuiSvgIcon', slot);\n}\nconst svgIconClasses = generateUtilityClasses('MuiSvgIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default svgIconClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\nconst SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette2, _palette3;\n  return {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    // the <svg> will define the property that has `currentColor`\n    // for example heroicons uses fill=\"none\" and stroke=\"currentColor\"\n    fill: ownerState.hasSvgAsChild ? undefined : 'currentColor',\n    flexShrink: 0,\n    transition: (_theme$transitions = theme.transitions) == null || (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, 'fill', {\n      duration: (_theme$transitions2 = theme.transitions) == null || (_theme$transitions2 = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2.shorter\n    }),\n    fontSize: {\n      inherit: 'inherit',\n      small: ((_theme$typography = theme.typography) == null || (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || '1.25rem',\n      medium: ((_theme$typography2 = theme.typography) == null || (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || '1.5rem',\n      large: ((_theme$typography3 = theme.typography) == null || (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || '2.1875rem'\n    }[ownerState.fontSize],\n    // TODO v5 deprecate, v6 remove for sx\n    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null || (_palette = _palette[ownerState.color]) == null ? void 0 : _palette.main) != null ? _palette$ownerState$c : {\n      action: (_palette2 = (theme.vars || theme).palette) == null || (_palette2 = _palette2.action) == null ? void 0 : _palette2.active,\n      disabled: (_palette3 = (theme.vars || theme).palette) == null || (_palette3 = _palette3.action) == null ? void 0 : _palette3.disabled,\n      inherit: undefined\n    }[ownerState.color]\n  };\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n  const {\n      children,\n      className,\n      color = 'inherit',\n      component = 'svg',\n      fontSize = 'medium',\n      htmlColor,\n      inheritViewBox = false,\n      titleAccess,\n      viewBox = '0 0 24 24'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const hasSvgAsChild = /*#__PURE__*/React.isValidElement(children) && children.type === 'svg';\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox,\n    hasSvgAsChild\n  });\n  const more = {};\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    focusable: \"false\",\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, more, other, hasSvgAsChild && children.props, {\n    ownerState: ownerState,\n    children: [hasSvgAsChild ? children.props.children : children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../SvgIcon';\n\n/**\n * Private module reserved for @mui packages.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return /*#__PURE__*/_jsx(SvgIcon, _extends({\n      \"data-testid\": `${displayName}Icon`,\n      ref: ref\n    }, props, {\n      children: path\n    }));\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');","import styled from \"@emotion/styled\"\nimport { OpenInNew } from \"@mui/icons-material\"\nimport { theme } from \"../theme/theme\"\nconst { palette } = theme\n\nexport const Content = styled.div`\n  margin: 0 auto;\n  max-width: 768px;\n  padding-left: 0.75rem;\n`\n\nexport const PostContainer = styled.div`\n  margin-bottom: 2rem;\n`\n\nexport const PostLink = styled.a`\n  text-decoration: none;\n  color: inherit;\n`\nexport const OpenInNewIcon = styled(OpenInNew)`\n  visibility: visible;\n`\n\nexport const PostTitle = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  gap: 0.5rem;\n  flex-direction: row;\n  align-items: center;\n  transition: 0.4s ease-out;\n\n  h3 {\n    margin-bottom: 0;\n  }\n\n  &:hover ${OpenInNewIcon} {\n    visibility: visible;\n    color: ${palette.neutral.pure};\n    transition: 0.1s ease-in;\n  }\n`\n\nexport const ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nexport const ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nexport const MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(144, 224, 239, 0.15),\n    rgba(144, 224, 239, 0.8) 100%,\n    rgba(144, 224, 239, 0.25)\n  );\n`\n\nexport const SimpleHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  transition: 0.4s ease-out;\n\n  &.active {\n    color: ${palette.neutral.pure};\n    :after {\n      transform: scaleX(1);\n    }\n  }\n\n  :hover {\n    color: ${palette.neutral.pure};\n    transition: 0.1s ease-in;\n\n    :after {\n      transform: scaleX(1);\n      transform-origin: left;\n    }\n  }\n`\n","import React, { useEffect, useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport * as S from \"../pagesStyles/blog.styles\"\nimport NProgress from \"nprogress\"\n\nconst Blog = () => {\n  const [postList, setPostList] = useState([])\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      NProgress.start()\n      await fetch(`https://dev.to/api/articles/latest?username=guiteixeira`)\n        .then((response) => response.json())\n        .then((resultData) => {\n          setPostList(resultData)\n        })\n      NProgress.done()\n    }\n    fetchPosts()\n  }, [])\n\n  return (\n    <Layout>\n      <Seo title=\"Articles\" />\n      <S.Content>\n        <h1>Articles</h1>\n        {postList.map(\n          ({\n            id,\n            url,\n            title,\n            readable_publish_date,\n            reading_time_minutes,\n            description,\n          }) => (\n            <S.PostContainer key={id}>\n              <S.PostLink href={url} rel=\"noopener noreferrer\" target=\"_blank\">\n                <S.PostTitle>\n                  <S.SimpleHeader>{title}</S.SimpleHeader>\n                  <S.OpenInNewIcon fontSize=\"small\" />\n                </S.PostTitle>\n\n                <div>\n                  <S.ArticleDate>{readable_publish_date}</S.ArticleDate>\n                  <S.ReadingTime>\n                    {\" \"}\n                    - {reading_time_minutes} min read\n                  </S.ReadingTime>\n                  <p>{description}</p>\n                </div>\n              </S.PostLink>\n            </S.PostContainer>\n          )\n        )}\n      </S.Content>\n    </Layout>\n  )\n}\n\nexport default Blog\n"],"names":["getSvgIconUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SvgIconRoot","styled","name","overridesResolver","props","styles","ownerState","root","color","capitalize","fontSize","theme","_theme$transitions","_theme$transitions$cr","_theme$transitions2","_theme$typography","_theme$typography$pxT","_theme$typography2","_theme$typography2$px","_theme$typography3","_theme$typography3$px","_palette$ownerState$c","_palette","_palette2","_palette3","userSelect","width","height","display","fill","hasSvgAsChild","undefined","flexShrink","transition","transitions","create","call","duration","shorter","inherit","small","typography","pxToRem","medium","large","vars","palette","main","action","active","disabled","SvgIcon","inProps","ref","children","className","component","htmlColor","inheritViewBox","titleAccess","viewBox","other","type","instanceFontSize","more","classes","slots","composeClasses","useUtilityClasses","as","clsx","focusable","role","muiName","createSvgIcon","path","displayName","Component","d","Content","_styled","target","PostContainer","PostLink","OpenInNewIcon","OpenInNew","PostTitle","neutral","pure","ReadingTime","ArticleDate","SimpleHeader","Blog","postList","setPostList","useState","useEffect","async","NProgress","fetch","then","response","json","resultData","fetchPosts","___EmotionJSX","Layout","Seo","title","S","map","_ref","id","url","readable_publish_date","reading_time_minutes","description","key","href","rel"],"sourceRoot":""}