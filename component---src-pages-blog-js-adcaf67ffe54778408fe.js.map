{"version":3,"file":"component---src-pages-blog-js-adcaf67ffe54778408fe.js","mappings":"qPAEO,IAAMA,GAAO,qHAMPC,GAAW,yFAgBXC,IAXY,8PAWA,qRAuBZC,GAAW,yFAIXC,GAAQ,8F,oBCmBrB,EAhEa,WACX,OAAgCC,EAAAA,EAAAA,UAAS,IAAlCC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAApCG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qFACjBF,GAAa,GACbG,EAAAA,QAFiB,SAGXC,MAAM,2DACTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLV,EAAYU,MANC,OASjBR,GAAa,GACbG,EAAAA,OAViB,2CAAH,qDAYhBD,MACC,KAGD,QAAC,IAAD,MACE,QAAC,IAAD,CAAKO,MAAM,UACX,QAAC,EAAD,MACE,2BACA,mBACGZ,IACEE,GACDF,EAASa,KACP,WAQEC,GARF,IAEIC,EAFJ,EAEIA,IACAH,EAHJ,EAGIA,MACAI,EAJJ,EAIIA,sBACAC,EALJ,EAKIA,qBACAC,EANJ,EAMIA,YANJ,OAUE,eAAKC,IAAKL,IACR,QAAC,EAAD,CACEM,KAAML,EACNM,IAAI,sBACJC,OAAO,WAEP,QAAC,EAAD,KAAiBV,KAEnB,oBACE,QAAC,EAAD,KAAgBI,IAChB,QAAC,EAAD,KACG,IADH,KAEKC,EAFL,eAKF,iBAAIC","sources":["webpack://gatsby-starter-julia/./src/pagesStyles/blog.styles.js","webpack://gatsby-starter-julia/./src/pages/blog.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nexport const ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nexport const MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(144, 224, 239, 0.15),\n    rgba(144, 224, 239, 0.8) 100%,\n    rgba(144, 224, 239, 0.25)\n  );\n`\n\nexport const SimpleHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  transition: 0.4s ease-out;\n\n  &.active {\n    color: #6c757d;\n    :after {\n      transform: scaleX(1);\n    }\n  }\n\n  :hover {\n    color: #6c757d;\n    transition: 0.1s ease-in;\n\n    :after {\n      transform: scaleX(1);\n      transform-origin: left;\n    }\n  }\n`\n\nexport const ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\nexport const PostLink = styled.a`\n  text-decoration: none;\n  color: inherit;\n`\n","import React, { useEffect, useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport * as S from \"../pagesStyles/blog.styles\"\nimport * as NProgress from \"nprogress\"\n\nconst Blog = () => {\n  const [postList, setPostList] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setIsLoading(true)\n      NProgress.start()\n      await fetch(`https://dev.to/api/articles/latest?username=guiteixeira`)\n        .then((response) => response.json())\n        .then((resultData) => {\n          setPostList(resultData)\n        })\n\n      setIsLoading(false)\n      NProgress.done()\n    }\n    fetchPosts()\n  }, [])\n\n  return (\n    <Layout>\n      <Seo title=\"Blog\" />\n      <S.Content>\n        <h1>Blog</h1>\n        <div>\n          {postList &&\n            !isLoading &&\n            postList.map(\n              (\n                {\n                  url,\n                  title,\n                  readable_publish_date,\n                  reading_time_minutes,\n                  description,\n                },\n                index\n              ) => (\n                <div key={index}>\n                  <S.PostLink\n                    href={url}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <S.SimpleHeader>{title}</S.SimpleHeader>\n                  </S.PostLink>\n                  <div>\n                    <S.ArticleDate>{readable_publish_date}</S.ArticleDate>\n                    <S.ReadingTime>\n                      {\" \"}\n                      - {reading_time_minutes} min read\n                    </S.ReadingTime>\n                  </div>\n                  <p>{description}</p>\n                </div>\n              )\n            )}\n        </div>\n      </S.Content>\n    </Layout>\n  )\n}\n\nexport default Blog\n"],"names":["Content","ArticleDate","SimpleHeader","ReadingTime","PostLink","useState","postList","setPostList","isLoading","setIsLoading","useEffect","fetchPosts","NProgress","fetch","then","response","json","resultData","title","map","index","url","readable_publish_date","reading_time_minutes","description","key","href","rel","target"],"sourceRoot":""}